import sql from 'mssql';


const schemas = {
    liveScan: {
        scan_id: sql.BigInt(),
        event_id: sql.NVarChar(50),
        record_id: sql.Int(),
        scan_date: sql.DateTime(),
        latitude: sql.Float(),
        longitude: sql.Float(),
        location_description: sql.NVarChar(255),
        scan_type: sql.NVarChar(50),
        scan_status: sql.NVarChar(20),
        scanned_by: sql.NVarChar(100),
        scan_results: sql.NVarChar(sql.MAX),
        associated_alerts: sql.NVarChar(255),
        weather_conditions: sql.NVarChar(255),
        traffic_conditions: sql.NVarChar(255),
        equipment_type: sql.NVarChar(255),
        ip_address: sql.NVarChar(50),
        display_name: sql.NVarChar(sql.MAX),
    },
    liveAlertSafety: {
        event_id: sql.NVarChar(50),
        record_id: sql.Int(),
        type: sql.NVarChar(50),
        description: sql.NVarChar(sql.MAX),
        status: sql.NVarChar(20),
        event_date: sql.DateTime(),
        event_location: sql.NVarChar(255),
        latitude: sql.Float(),
        longitude: sql.Float(),
        severity_level: sql.NVarChar(20),
        reported_by: sql.NVarChar(100),
        report_date: sql.DateTime(),
        response_team: sql.NVarChar(100),
        response_time: sql.DateTime(),
        resolution_time: sql.DateTime(),
        response_actions: sql.NVarChar(sql.MAX),
        law_enforcement_agency: sql.NVarChar(100),
        law_enforcement_contact: sql.NVarChar(100),
        affected_population: sql.Int(),
        affected_infrastructure: sql.NVarChar(255),
        casualties: sql.Int(),
        injuries: sql.Int(),
        evacuations: sql.Int(),
        weather_conditions: sql.NVarChar(255),
        traffic_conditions: sql.NVarChar(255),
        media_coverage: sql.NVarChar(sql.MAX),
        ip_address: sql.NVarChar(50),
    },
    liveAlertWeather: {
        event_id: sql.NVarChar(50),
        record_id: sql.Int(),
        type: sql.NVarChar(50),
        description: sql.NVarChar(sql.MAX),
        status: sql.NVarChar(20),
        event_date: sql.DateTime(),
        event_location: sql.NVarChar(255),
        latitude: sql.Float(),
        longitude: sql.Float(),
        severity_level: sql.NVarChar(20),
        temperature: sql.Float(),
        humidity: sql.Float(),
        wind_speed: sql.Float(),
        wind_direction: sql.NVarChar(10),
        precipitation: sql.Float(),
        visibility: sql.Float(),
        pressure: sql.Float(),
        weather_conditions: sql.NVarChar(255),
        reported_by: sql.NVarChar(100),
        report_date: sql.DateTime(),
        response_team: sql.NVarChar(100),
        response_time: sql.DateTime(),
        resolution_time: sql.DateTime(),
        response_actions: sql.NVarChar(sql.MAX),
        fire_department: sql.NVarChar(100),
        fire_department_contact: sql.NVarChar(100),
        affected_population: sql.Int(),
        affected_infrastructure: sql.NVarChar(255),
        evacuations: sql.Int(),
        power_outages: sql.Int(),
        road_closures: sql.Int(),
        damage_estimate: sql.Float(),
        forecast_accuracy: sql.NVarChar(20),
        alert_source: sql.NVarChar(100),
        alert_issued_time: sql.DateTime(),
        alert_expiry_time: sql.DateTime(),
        media_coverage: sql.NVarChar(sql.MAX),
        ip_address: sql.NVarChar(50),
    },
    liveAlertUtilities: {
        event_id: sql.NVarChar(50),
        record_id: sql.Int(),
        type: sql.NVarChar(50),
        description: sql.NVarChar(sql.MAX),
        status: sql.NVarChar(20),
        event_date: sql.DateTime(),
        event_location: sql.NVarChar(255),
        latitude: sql.Float(),
        longitude: sql.Float(),
        severity_level: sql.NVarChar(20),
        reported_by: sql.NVarChar(100),
        report_date: sql.DateTime(),
        response_team: sql.NVarChar(100),
        response_time: sql.DateTime(),
        resolution_time: sql.DateTime(),
        response_actions: sql.NVarChar(sql.MAX),
        utility_company: sql.NVarChar(100),
        utility_company_contact: sql.NVarChar(100),
        affected_population: sql.Int(),
        affected_infrastructure: sql.NVarChar(255),
        service_disruption: sql.NVarChar(255),
        duration: sql.Float(),
        estimated_repair_time: sql.DateTime(),
        outage_area: sql.NVarChar(255),
        backup_services: sql.NVarChar(255),
        cause: sql.NVarChar(255),
        impact_level: sql.NVarChar(20),
        impact_financial: sql.Float(),
        impact_environmental: sql.NVarChar(sql.MAX),
        weather_conditions: sql.NVarChar(255),
        media_coverage: sql.NVarChar(sql.MAX),
        ip_address: sql.NVarChar(50),
    },
    liveAlertDisaster: {
        event_id: sql.NVarChar(50),
        record_id: sql.Int(),
        type: sql.NVarChar(50),
        disaster_type: sql.NVarChar(50),
        description: sql.NVarChar(sql.MAX),
        status: sql.NVarChar(20),
        event_date: sql.DateTime(),
        event_location: sql.NVarChar(255),
        latitude: sql.Float(),
        longitude: sql.Float(),
        severity_level: sql.NVarChar(20),
        magnitude: sql.Float(),
        depth: sql.Float(),
        affected_area: sql.NVarChar(255),
        duration: sql.Float(),
        cause: sql.NVarChar(255),
        reported_by: sql.NVarChar(100),
        report_date: sql.DateTime(),
        response_team: sql.NVarChar(100),
        response_time: sql.DateTime(),
        resolution_time: sql.DateTime(),
        response_actions: sql.NVarChar(sql.MAX),
        fire_department: sql.NVarChar(100),
        fire_department_contact: sql.NVarChar(100),
        emergency_shelter: sql.NVarChar(100),
        emergency_shelter_location: sql.NVarChar(255),
        emergency_shelter_contact: sql.NVarChar(100),
        affected_population: sql.Int(),
        affected_infrastructure: sql.NVarChar(255),
        casualties: sql.Int(),
        injuries: sql.Int(),
        evacuations: sql.Int(),
        damage_estimate: sql.Float(),
        impact_level: sql.NVarChar(20),
        impact_financial: sql.Float(),
        impact_environmental: sql.NVarChar(sql.MAX),
        media_coverage: sql.NVarChar(sql.MAX),
        ip_address: sql.NVarChar(50),
    },
    Webhook_Errors: {
        ip_address: sql.NVarChar(50),
        path: sql.NVarChar(20),
        error_content: sql.NVarChar(sql.MAX),
    },
};

export { schemas };
